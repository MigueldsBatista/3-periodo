começamos a partir do segundo elemento e vamos comparando ele com os anteriores,
e caso o anterior seja maior, nós trocamos, quando acharmos um numero menor,
finalizamos essa chamada e avançamos um índice, até o tamanho do array


int arr={5, 3, 2, 4};

void insertionSort(int arr[], int n){

    for(int i = 1 ; i < n ; i++){
        
        int j=i;
        //enquanto o anterior for maior que o atual
        while(arr[j] < arr[j-1] && j > 0){
            int aux=arr[j];
            arr[j]=arr[j-1];
            arr[j-1]=aux;
            j--;
        }
    }

    for(int i=0;i<n;i++){
        printf("[%d]", arr[i]);
    }

    printf("\n");
}


1 call
j = 1
i=1

(~) -> j
(_) -> i

    ___
[5] [3] [2] [4] swap (5 <-> 3)
    ~~~
end of call
--------------------------------------------------

2 call
i=2
j=2      
        ___
[3] [5] [2] [4] swap (5 <-> 2)
j=1     ~~~

        ___
[3] [2] [5] [4] swap (3 <-> 2)
j=0 ~~~
    
end of call 
[2] [3] [5] [4]
j=0

-----------------------------------------------

3 call
j=3
i=3
            ___
[2] [3] [5] [4] swap (5 <-> 4)
j=2         ~~~
            ___
[2] [3] [4] [5] no swap
        ~~~

end of call


